#!/usr/bin/env bash

# You can call this script like this:
# $ ./volumeControl.sh up
# $ ./volumeControl.sh down
# $ ./volumeControl.sh mute

# Script modified from these wonderful people:
# https://github.com/dastorm/volume-notification-dunst/blob/master/volume.sh
# https://gist.github.com/sebastiencs/5d7227f388d93374cebdf72e783fbd6a

function get_volume {
    pactl get-sink-volume @DEFAULT_SINK@ | awk -F '/  ' '{print $2}' | cut -d '%' -f1
    # amixer get Master | grep '%' | head -n 1 | cut -d '[' -f 2 | cut -d '%' -f 1
}

function is_mute {
    pactl get-sink-mute @DEFAULT_SINK@ | grep yes >/dev/null
    # amixer get Master | grep '%' | grep -oE '[^ ]+$' | grep off >/dev/null
}

function send_notification {
    iconSound="$HOME/.config/i3/scripts/svg/volume-high.svg"
    iconMuted="$HOME/.config/i3/scripts/svg/volume-mute.svg"
    if is_mute; then
        dunstify -i $iconMuted -r 2593 -u normal "mute"
    else
        volume=$(get_volume)
        # Make the bar with the special character ─ (it's not dash -)
        # https://en.wikipedia.org/wiki/Box-drawing_character
        bar=$(seq --separator="─" 0 "$((volume / 5))" | sed 's/[0-9]//g')
        # Send the notification
        dunstify -i $iconSound -r 2593 -u normal "    $bar"
    fi
}

function adjust_volume {
    pactl set-sink-volume @DEFAULT_SINK@ true >/dev/null
    pactl set-sink-volume @DEFAULT_SINK@ "$1" >/dev/null
}

case $1 in
up)
    adjust_volume +5%
    send_notification
    ;;
down)
    adjust_volume -5%
    amixer -D pulse set Master on >/dev/null
    amixer -D pulse sset Master 5%- >/dev/null
    send_notification
    ;;
mute)
    # toggle mute
    amixer -D pulse set Master 1+ toggle >/dev/null
    send_notification
    ;;
esac
